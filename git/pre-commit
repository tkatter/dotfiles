#!/usr/bin/bash
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

set -e

if command -v "cargo" &>/dev/null; then
  echo "Running \`cargo clippy -- -D warnings\`)"
  cargo clippy -- -D warnings # Fail on errors

  echo "Running \`cargo fmt\`..."
  cargo fmt
fi

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.rs$' || true)

if [ -z "$STAGED_FILES" ]; then
  echo "No Rust files staged, skipping re-stage."
  exit 0
fi

# Check if formatting changed any of the staged files
CHANGED_FILES=$(git diff --name-only -- $STAGED_FILES || true)

if [ -n "$CHANGED_FILES" ]; then
  echo "Re-staging formatted files:"
  echo "$CHANGED_FILES"
  git add $CHANGED_FILES
else
  echo "No formatting changes detected."
fi

exit 0
